{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\Generals\\\\DraggableItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useDraggable } from \"../../contexts/DraggableContext\";\nimport { Resizable } from 'react-resizable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DraggableItem = ({\n  type,\n  isSelected,\n  id,\n  style,\n  text\n}) => {\n  _s();\n  const {\n    updateItemText\n  } = useDraggable();\n  const [isEditing, setIsEditing] = useState(false);\n  const textRef = useRef(null);\n  useEffect(() => {\n    if (isEditing && textRef.current) {\n      textRef.current.focus();\n    }\n  }, [isEditing]);\n  const handleTextBlur = e => {\n    setIsEditing(false);\n    updateItemText(id, e.currentTarget.textContent || \"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      e.target.blur();\n    }\n  };\n  const shapeStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    border: isSelected && !isEditing ? \"2px solid blue\" : \"1px solid black\"\n  };\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: type,\n        style: shapeStyles,\n        onClick: () => setIsEditing(false),\n        onDoubleClick: () => setIsEditing(true),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: textRef,\n          contentEditable: isEditing,\n          onBlur: handleTextBlur,\n          onKeyDown: handleKeyDown,\n          style: {\n            outline: \"none\",\n            cursor: \"text\",\n            textAlign: \"center\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(DraggableItem, \"NoT5z7KY1dpBNlfds7vACguM7e8=\", false, function () {\n  return [useDraggable];\n});\n_c = DraggableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableItem\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useDraggable","Resizable","jsxDEV","_jsxDEV","DraggableItem","type","isSelected","id","style","text","_s","updateItemText","isEditing","setIsEditing","textRef","current","focus","handleTextBlur","e","currentTarget","textContent","handleKeyDown","key","preventDefault","target","blur","shapeStyles","display","alignItems","justifyContent","position","border","children","className","onClick","onDoubleClick","ref","contentEditable","onBlur","onKeyDown","outline","cursor","textAlign","top","left","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/Generals/DraggableItem.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { ShapeType } from \"../../contexts/DraggableContext\";\r\nimport { useDraggable } from \"../../contexts/DraggableContext\";\r\nimport { Resizable } from 'react-resizable'; \r\ntype DraggableItemProps = {\r\n  type: ShapeType;\r\n  id: number;\r\n  isSelected: boolean;\r\n  style?: React.CSSProperties;\r\n  text: string;\r\n};\r\n\r\nexport const DraggableItem = ({\r\n  type,\r\n  isSelected,\r\n  id,\r\n  style,\r\n  text,\r\n}: DraggableItemProps) => {\r\n  const { updateItemText } = useDraggable();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const textRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isEditing && textRef.current) {\r\n      textRef.current.focus();\r\n    }\r\n  }, [isEditing]);\r\n\r\n  const handleTextBlur = (e: React.FocusEvent<HTMLDivElement>) => {\r\n    setIsEditing(false);\r\n    updateItemText(id, e.currentTarget.textContent || \"\");\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      (e.target as HTMLElement).blur();\r\n    }\r\n  };\r\n  \r\n  const shapeStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    position: \"relative\" as \"relative\",\r\n    border: isSelected && !isEditing ? \"2px solid blue\" : \"1px solid black\",\r\n  };\r\n\r\n  return (\r\n\r\n      <Resizable>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n            className={type}\r\n            style={shapeStyles}\r\n            onClick={() => setIsEditing(false)}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <div\r\n              ref={textRef}\r\n              contentEditable={isEditing}\r\n              onBlur={handleTextBlur}\r\n              onKeyDown={handleKeyDown}\r\n              style={{\r\n                outline: \"none\",\r\n                cursor: \"text\",\r\n                textAlign: \"center\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            >\r\n              {text}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Resizable>\r\n\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}