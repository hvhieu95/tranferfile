{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\Canvas\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDraggable } from \"../../contexts/DraggableContext\";\nimport Draggable from \"react-draggable\";\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\nimport { DraggableItem } from \"../Generals/DraggableItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DocumentViewer = /*#__PURE__*/React.memo(_c = ({\n  uri,\n  isDragging\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf\",\n    style: {\n      height: \"600px\",\n      width: \"100%\",\n      overflow: \"hidden\",\n      pointerEvents: isDragging ? \"none\" : \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DocViewer, {\n      documents: [{\n        uri: uri,\n        fileType: uri.substring(uri.length - 6).split(\".\").pop(),\n        fileName: \"remote \" + uri.substring(uri.length - 6).split(\".\").pop() + \" file\"\n      }],\n      pluginRenderers: DocViewerRenderers,\n      theme: {\n        primary: \"#5296d8\",\n        secondary: \"#ffffff\",\n        tertiary: \"#5296d899\",\n        textPrimary: \"#ffffff\",\n        textSecondary: \"#5296d8\",\n        textTertiary: \"#00000099\",\n        disableThemeScrollbar: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n});\n_c2 = DocumentViewer;\nconst Shapes = /*#__PURE__*/React.memo(_c3 = ({\n  canvasItems,\n  setSelectedShapeId,\n  selectedShapeId,\n  updatePosition,\n  handleDragStart,\n  handleDragEnd\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: canvasItems.map(item => /*#__PURE__*/_jsxDEV(Draggable, {\n      position: {\n        x: item.position.x,\n        y: item.position.y\n      },\n      onStart: handleDragStart,\n      onStop: (e, data) => {\n        handleDragEnd();\n        updatePosition(item.id, {\n          x: data.x,\n          y: data.y\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-source\": \"library\",\n        style: {\n          position: \"fixed\",\n          top: item.position.y,\n          left: item.position.x\n        },\n        onClick: e => {\n          e.stopPropagation();\n          setSelectedShapeId(item.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(DraggableItem, {\n          type: item.type,\n          id: item.id,\n          isSelected: selectedShapeId === item.id,\n          style: {\n            position: \"absolute\"\n          },\n          text: item.text || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n});\n_c4 = Shapes;\nexport const Canvas = () => {\n  _s();\n  const {\n    canvasItems: initialCanvasItems,\n    addItemToCanvas,\n    undoCanvasAction,\n    uri\n  } = useDraggable();\n  const [canvasItems, setCanvasItems] = useState(initialCanvasItems);\n  const [selectedShapeId, setSelectedShapeId] = useState(null);\n  const [isDraggingShape, setIsDraggingShape] = useState(false);\n  const [isDraggingFromLibrary, setIsDraggingFromLibrary] = useState(false);\n  const [isMovingShape, setIsMovingShape] = useState(false);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    const type = e.dataTransfer.getData(\"type\");\n    const source = e.dataTransfer.getData(\"source\");\n    const canvasRect = e.currentTarget.getBoundingClientRect();\n    const position = {\n      x: e.clientX - canvasRect.left,\n      y: e.clientY - canvasRect.top\n    };\n    if (source === \"library\") {\n      addItemToCanvas({\n        type,\n        id: Date.now(),\n        isSelected: false\n      }, position);\n    }\n  }, [addItemToCanvas]);\n  const handleDragStart = useCallback(e => {\n    const target = e.target;\n    if (target.getAttribute('data-source') === 'library') {\n      setIsDraggingFromLibrary(true);\n      setIsDraggingShape(false);\n      setIsMovingShape(false);\n    } else {\n      setIsMovingShape(true);\n      setIsDraggingShape(false);\n      setIsDraggingFromLibrary(false);\n    }\n  }, []);\n  const handleDragEnd = useCallback(() => {\n    setIsDraggingShape(false);\n    setIsDraggingFromLibrary(false);\n    setIsMovingShape(false);\n  }, []);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  useEffect(() => {\n    setCanvasItems(initialCanvasItems);\n  }, [initialCanvasItems]);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === \"Delete\" && selectedShapeId !== null) {\n        setCanvasItems(prevItems => prevItems.filter(item => item.id !== selectedShapeId));\n        setSelectedShapeId(null);\n      }\n      if (event.ctrlKey && event.key === \"z\") {\n        undoCanvasAction();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [selectedShapeId, undoCanvasAction]);\n  const updatePosition = (id, position) => {\n    setCanvasItems(prevItems => {\n      const itemToUpdate = prevItems.find(i => i.id === id);\n      if (itemToUpdate && (itemToUpdate.position.x !== position.x || itemToUpdate.position.y !== position.y)) {\n        return prevItems.map(i => i.id === id ? {\n          ...i,\n          position\n        } : i);\n      }\n      return prevItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onClick: () => setSelectedShapeId(null),\n    style: {\n      border: \"1px solid black\",\n      minHeight: \"900px\",\n      position: \"relative\",\n      pointerEvents: isDraggingFromLibrary ? \"none\" : \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Shapes, {\n      canvasItems: canvasItems,\n      setSelectedShapeId: setSelectedShapeId,\n      selectedShapeId: selectedShapeId,\n      updatePosition: updatePosition,\n      handleDragStart: handleDragStart,\n      handleDragEnd: handleDragEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentViewer, {\n      uri: uri,\n      isDragging: isDraggingShape\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"iKwqb2CjWMTkacRUiVSa6DbjOjc=\", false, function () {\n  return [useDraggable];\n});\n_c5 = Canvas;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DocumentViewer$React.memo\");\n$RefreshReg$(_c2, \"DocumentViewer\");\n$RefreshReg$(_c3, \"Shapes$React.memo\");\n$RefreshReg$(_c4, \"Shapes\");\n$RefreshReg$(_c5, \"Canvas\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useDraggable","Draggable","DocViewer","DocViewerRenderers","DraggableItem","jsxDEV","_jsxDEV","Fragment","_Fragment","DocumentViewer","memo","_c","uri","isDragging","className","style","height","width","overflow","pointerEvents","children","documents","fileType","substring","length","split","pop","fileName","pluginRenderers","theme","primary","secondary","tertiary","textPrimary","textSecondary","textTertiary","disableThemeScrollbar","_jsxFileName","lineNumber","columnNumber","_c2","Shapes","_c3","canvasItems","setSelectedShapeId","selectedShapeId","updatePosition","handleDragStart","handleDragEnd","map","item","position","x","y","onStart","onStop","e","data","id","top","left","onClick","stopPropagation","type","isSelected","text","_c4","Canvas","_s","initialCanvasItems","addItemToCanvas","undoCanvasAction","setCanvasItems","isDraggingShape","setIsDraggingShape","isDraggingFromLibrary","setIsDraggingFromLibrary","isMovingShape","setIsMovingShape","handleDrop","preventDefault","dataTransfer","getData","source","canvasRect","currentTarget","getBoundingClientRect","clientX","clientY","Date","now","target","getAttribute","handleDragOver","handleKeyDown","event","key","prevItems","filter","ctrlKey","window","addEventListener","removeEventListener","itemToUpdate","find","i","onDrop","onDragOver","border","minHeight","_c5","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from \"react\";\r\nimport { useDraggable } from \"../../contexts/DraggableContext\";\r\nimport Draggable from \"react-draggable\";\r\nimport DocViewer, { DocViewerRenderers } from \"@cyntler/react-doc-viewer\";\r\nimport { DraggableItem } from \"../Generals/DraggableItem\";\r\nimport { ShapeType } from \"../../contexts/DraggableContext\";\r\n\r\nconst DocumentViewer = React.memo(\r\n  ({ uri, isDragging }: { uri: string; isDragging: boolean }) => {\r\n\r\n    return (\r\n      <div\r\n        className=\"pdf\"\r\n        style={{\r\n          height: \"600px\",\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n          pointerEvents:isDragging? \"none\" : \"auto\",\r\n        }}\r\n      >\r\n        <DocViewer\r\n          documents={[\r\n            {\r\n              uri: uri,\r\n              fileType: uri\r\n                .substring(uri.length - 6)\r\n                .split(\".\")\r\n                .pop(),\r\n              fileName:\r\n                \"remote \" +\r\n                uri\r\n                  .substring(uri.length - 6)\r\n                  .split(\".\")\r\n                  .pop() +\r\n                \" file\",\r\n            },\r\n          ]}\r\n          pluginRenderers={DocViewerRenderers}\r\n          theme={{\r\n            primary: \"#5296d8\",\r\n            secondary: \"#ffffff\",\r\n            tertiary: \"#5296d899\",\r\n            textPrimary: \"#ffffff\",\r\n            textSecondary: \"#5296d8\",\r\n            textTertiary: \"#00000099\",\r\n            disableThemeScrollbar: true,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\nconst Shapes = React.memo(\r\n  ({\r\n    canvasItems,\r\n    setSelectedShapeId,\r\n    selectedShapeId,\r\n    updatePosition,\r\n    handleDragStart,\r\n    handleDragEnd,\r\n  }: {\r\n    canvasItems: any[];\r\n    setSelectedShapeId: any;\r\n    selectedShapeId: number | null;\r\n    updatePosition: any;\r\n    handleDragStart: any;\r\n    handleDragEnd: any;\r\n  }) => {\r\n    return (\r\n      <>\r\n        {canvasItems.map((item) => (\r\n          <Draggable\r\n            key={item.id}\r\n            position={{ x: item.position.x, y: item.position.y }}\r\n            onStart={handleDragStart}\r\n            onStop={(e, data) => {\r\n              handleDragEnd();\r\n              updatePosition(item.id, { x: data.x, y: data.y });\r\n            }}\r\n          >\r\n            <div \r\n             data-source=\"library\"\r\n              style={{\r\n                position: \"fixed\",\r\n                top: item.position.y,\r\n                left: item.position.x,\r\n              }}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelectedShapeId(item.id);\r\n              }}\r\n            >\r\n              <DraggableItem\r\n                type={item.type}\r\n                id={item.id}\r\n                isSelected={selectedShapeId === item.id}\r\n                style={{ position: \"absolute\" }}\r\n                text={item.text || \"\"}\r\n              />\r\n            </div>\r\n          </Draggable>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport const Canvas = () => {\r\n  const {\r\n    canvasItems: initialCanvasItems,\r\n    addItemToCanvas,\r\n    undoCanvasAction,\r\n    uri,\r\n  } = useDraggable();\r\n  const [canvasItems, setCanvasItems] = useState(initialCanvasItems);\r\n  const [selectedShapeId, setSelectedShapeId] = useState<number | null>(null);\r\n  const [isDraggingShape, setIsDraggingShape] = useState(false);\r\n  const [isDraggingFromLibrary, setIsDraggingFromLibrary] = useState(false);\r\n  const [isMovingShape, setIsMovingShape] = useState(false);\r\n\r\n  const handleDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const type = e.dataTransfer.getData(\"type\") as ShapeType;\r\n      const source = e.dataTransfer.getData(\"source\");\r\n      const canvasRect = e.currentTarget.getBoundingClientRect();\r\n      const position = {\r\n        x: e.clientX - canvasRect.left,\r\n        y: e.clientY - canvasRect.top,\r\n      };\r\n      if (source === \"library\") {\r\n        addItemToCanvas({ type, id: Date.now(), isSelected: false }, position);\r\n      }\r\n    },\r\n    [addItemToCanvas]\r\n  );\r\n  const handleDragStart = useCallback((e: React.DragEvent) => {\r\n    const target = e.target as HTMLElement;\r\n    if (target.getAttribute('data-source') === 'library') {\r\n      setIsDraggingFromLibrary(true);\r\n      setIsDraggingShape(false);\r\n      setIsMovingShape(false);\r\n    } else {\r\n      setIsMovingShape(true);\r\n      setIsDraggingShape(false);\r\n      setIsDraggingFromLibrary(false);\r\n    }\r\n}, []);\r\n\r\n  const handleDragEnd = useCallback(() => {\r\n    setIsDraggingShape(false);\r\n    setIsDraggingFromLibrary(false);\r\n    setIsMovingShape(false);\r\n  }, []);\r\n\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    setCanvasItems(initialCanvasItems);\r\n  }, [initialCanvasItems]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === \"Delete\" && selectedShapeId !== null) {\r\n        setCanvasItems((prevItems) =>\r\n          prevItems.filter((item) => item.id !== selectedShapeId)\r\n        );\r\n        setSelectedShapeId(null);\r\n      }\r\n      if (event.ctrlKey && event.key === \"z\") {\r\n        undoCanvasAction();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [selectedShapeId, undoCanvasAction]);\r\n\r\n  const updatePosition = (id: number, position: { x: number; y: number }) => {\r\n    setCanvasItems((prevItems) => {\r\n      const itemToUpdate = prevItems.find((i) => i.id === id);\r\n      if (\r\n        itemToUpdate &&\r\n        (itemToUpdate.position.x !== position.x ||\r\n          itemToUpdate.position.y !== position.y)\r\n      ) {\r\n        return prevItems.map((i) => (i.id === id ? { ...i, position } : i));\r\n      }\r\n      return prevItems;\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div\r\n      onDrop={handleDrop}\r\n      onDragOver={handleDragOver}\r\n      onClick={() => setSelectedShapeId(null)}\r\n      style={{\r\n        border: \"1px solid black\",\r\n        minHeight: \"900px\",\r\n        position: \"relative\",\r\n        pointerEvents: isDraggingFromLibrary ? \"none\" : \"auto\", \r\n      }}\r\n    >\r\n      <Shapes\r\n        canvasItems={canvasItems}\r\n        setSelectedShapeId={setSelectedShapeId}\r\n        selectedShapeId={selectedShapeId}\r\n        updatePosition={updatePosition}\r\n        handleDragStart={handleDragStart}\r\n        handleDragEnd={handleDragEnd}\r\n      />\r\n     <DocumentViewer uri={uri} isDragging={isDraggingShape} />\r\n\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}