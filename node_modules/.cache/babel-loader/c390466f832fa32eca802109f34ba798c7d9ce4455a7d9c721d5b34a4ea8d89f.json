{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\ShapeLibrary\\\\ShapeLibrary.tsx\";\nimport React from \"react\";\nimport { DraggableItem } from \"../Generals/DraggableItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = [{\n  id: 1,\n  type: \"circle\",\n  isSelected: false\n}, {\n  id: 2,\n  type: \"rectangle\",\n  isSelected: false\n}, {\n  id: 3,\n  type: \"triangle\",\n  isSelected: false\n}, {\n  id: 4,\n  type: \"hexagon\",\n  isSelected: false\n}, {\n  id: 5,\n  type: \"diamond\",\n  isSelected: false\n}, {\n  id: 6,\n  type: \"parallelogram\",\n  isSelected: false\n}];\nconst ShapeLibrary = () => {\n  const handleDragStart = (e, type, id) => {\n    e.dataTransfer.setData(\"type\", type);\n    e.dataTransfer.setData(\"source\", \"library\");\n    e.dataTransfer.setData(\"id\", id.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    children: shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n      draggable: true,\n      onDragStart: e => handleDragStart(e, shape.type, shape.id),\n      children: /*#__PURE__*/_jsxDEV(DraggableItem, {\n        id: shape.id,\n        type: shape.type,\n        isSelected: shape.isSelected,\n        text: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, shape.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ShapeLibrary;\nexport default ShapeLibrary;\nvar _c;\n$RefreshReg$(_c, \"ShapeLibrary\");","map":{"version":3,"names":["React","DraggableItem","jsxDEV","_jsxDEV","shapes","id","type","isSelected","ShapeLibrary","handleDragStart","e","dataTransfer","setData","toString","className","children","map","shape","draggable","onDragStart","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/ShapeLibrary/ShapeLibrary.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { DraggableItem } from \"../Generals/DraggableItem\";\r\nimport { ShapeType } from \"../../contexts/DraggableContext\";\r\n\r\ntype Shape = {\r\n  id: number;\r\n  type: ShapeType;\r\n  isSelected: boolean;\r\n  text:string\r\n};\r\n\r\nconst shapes: Shape[] = [\r\n  { id: 1, type: \"circle\", isSelected: false },\r\n  { id: 2, type: \"rectangle\", isSelected: false },\r\n  { id: 3, type: \"triangle\", isSelected: false },\r\n  { id: 4, type: \"hexagon\", isSelected: false },\r\n  { id: 5, type: \"diamond\", isSelected: false },\r\n  { id: 6, type: \"parallelogram\", isSelected: false },\r\n];\r\n\r\nconst ShapeLibrary: React.FC = () => {\r\n  const handleDragStart = (e: React.DragEvent, type: ShapeType, id: number) => {\r\n    e.dataTransfer.setData(\"type\", type);\r\n    e.dataTransfer.setData(\"source\", \"library\");\r\n    e.dataTransfer.setData(\"id\", id.toString());\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap\">\r\n      {shapes.map((shape) => (\r\n        <div\r\n          draggable\r\n          onDragStart={(e) => handleDragStart(e, shape.type, shape.id)}\r\n          key={shape.id}\r\n        >\r\n          <DraggableItem\r\n            id={shape.id}\r\n            type={shape.type}\r\n            isSelected={shape.isSelected}\r\n            text=\"\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShapeLibrary;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1D,MAAMC,MAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,UAAU,EAAE;AAAM,CAAC,EAC5C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,WAAW;EAAEC,UAAU,EAAE;AAAM,CAAC,EAC/C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,UAAU,EAAE;AAAM,CAAC,EAC9C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAM,CAAC,EAC7C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,SAAS;EAAEC,UAAU,EAAE;AAAM,CAAC,EAC7C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,eAAe;EAAEC,UAAU,EAAE;AAAM,CAAC,CACpD;AAED,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,eAAe,GAAGA,CAACC,CAAkB,EAAEJ,IAAe,EAAED,EAAU,KAAK;IAC3EK,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAAC;IACpCI,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;IAC3CF,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEP,EAAE,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BX,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBd,OAAA;MACEe,SAAS;MACTC,WAAW,EAAGT,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEO,KAAK,CAACX,IAAI,EAAEW,KAAK,CAACZ,EAAE,CAAE;MAAAU,QAAA,eAG7DZ,OAAA,CAACF,aAAa;QACZI,EAAE,EAAEY,KAAK,CAACZ,EAAG;QACbC,IAAI,EAAEW,KAAK,CAACX,IAAK;QACjBC,UAAU,EAAEU,KAAK,CAACV,UAAW;QAC7Ba,IAAI,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC,GAPGP,KAAK,CAACZ,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBIjB,YAAsB;AA2B5B,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}