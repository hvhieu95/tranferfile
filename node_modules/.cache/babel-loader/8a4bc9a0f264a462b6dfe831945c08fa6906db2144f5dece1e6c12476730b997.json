{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\contexts\\\\DraggableContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, createContext, useRef, useCallback } from \"react\";\n\n// context cho tính năng kéo thả\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableContext = /*#__PURE__*/createContext(null);\n\n// custom hook để truy cập vào giá trị của Draggble context\nexport const useDraggble = () => {\n  _s();\n  return useContext(DraggableContext);\n};\n\n// component để chia sẻ logic và state liên quan tới kéo thả\n_s(useDraggble, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DraggableProvider = ({\n  children\n}) => {\n  _s2();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const canvasRef = useRef(null);\n\n  // hàm xử lý khi việc kéo kết thúc\n  const handleStop = useCallback((e, data) => {\n    if (canvasRef.current) {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const itemRect = e.target.getBoundingClientRect();\n\n      // kiểm tra xem hình có nằm ngoài canvas không\n      if (itemRect.left < canvasRect.left || itemRect.right > canvasRect.right || itemRect.top < canvasRect.top || itemRect.bottom > canvasRect.bottom) {\n        setPosition({\n          x: 0,\n          y: 0\n        });\n      }\n    }\n  }, [setPosition, canvasRef]);\n  return /*#__PURE__*/_jsxDEV(DraggableContext.Provider, {\n    value: {\n      position,\n      handleStop\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasRef,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s2(DraggableProvider, \"wiDFbIBCoOJ592VCSYymvZ2Xshc=\");\n_c = DraggableProvider;\nvar _c;\n$RefreshReg$(_c, \"DraggableProvider\");","map":{"version":3,"names":["React","useContext","useState","createContext","useRef","useCallback","jsxDEV","_jsxDEV","DraggableContext","useDraggble","_s","DraggableProvider","children","_s2","position","setPosition","x","y","canvasRef","handleStop","e","data","current","canvasRect","getBoundingClientRect","itemRect","target","left","right","top","bottom","Provider","value","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/contexts/DraggableContext.tsx"],"sourcesContent":["import React, { useContext, useState, createContext, useRef, useCallback } from \"react\";\r\n\r\n// context cho tính năng kéo thả\r\ntype DraggableContextType = {\r\n    position: { x: number, y: number }\r\n    handleStop: (e: any, data: any) => void\r\n}\r\n\r\nconst DraggableContext = createContext<DraggableContextType | null>(null);\r\n\r\n// custom hook để truy cập vào giá trị của Draggble context\r\nexport const useDraggble = () => {\r\n    return useContext(DraggableContext);\r\n};\r\n\r\n// component để chia sẻ logic và state liên quan tới kéo thả\r\nexport const DraggableProvider: React.FC = ({ children }) => {\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    const canvasRef = useRef(null);\r\n\r\n    // hàm xử lý khi việc kéo kết thúc\r\n    const handleStop = useCallback((e, data) => {\r\n        if (canvasRef.current) {\r\n            const canvasRect = canvasRef.current.getBoundingClientRect();\r\n            const itemRect = e.target.getBoundingClientRect();\r\n\r\n            // kiểm tra xem hình có nằm ngoài canvas không\r\n            if (\r\n                itemRect.left < canvasRect.left ||\r\n                itemRect.right > canvasRect.right ||\r\n                itemRect.top < canvasRect.top ||\r\n                itemRect.bottom > canvasRect.bottom\r\n            ) {\r\n                setPosition({ x: 0, y: 0 });\r\n            }\r\n        }\r\n    }, [setPosition, canvasRef]);\r\n\r\n    return (\r\n        <DraggableContext.Provider value={{ position, handleStop }}>\r\n            <div ref={canvasRef}>\r\n                {children}\r\n            </div>\r\n        </DraggableContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;;AAEvF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,gBAAgB,gBAAGL,aAAa,CAA8B,IAAI,CAAC;;AAEzE;AACA,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,OAAOT,UAAU,CAACO,gBAAgB,CAAC;AACvC,CAAC;;AAED;AAAAE,EAAA,CAJaD,WAAW;AAKxB,OAAO,MAAME,iBAA2B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMe,UAAU,GAAGd,WAAW,CAAC,CAACe,CAAC,EAAEC,IAAI,KAAK;IACxC,IAAIH,SAAS,CAACI,OAAO,EAAE;MACnB,MAAMC,UAAU,GAAGL,SAAS,CAACI,OAAO,CAACE,qBAAqB,CAAC,CAAC;MAC5D,MAAMC,QAAQ,GAAGL,CAAC,CAACM,MAAM,CAACF,qBAAqB,CAAC,CAAC;;MAEjD;MACA,IACIC,QAAQ,CAACE,IAAI,GAAGJ,UAAU,CAACI,IAAI,IAC/BF,QAAQ,CAACG,KAAK,GAAGL,UAAU,CAACK,KAAK,IACjCH,QAAQ,CAACI,GAAG,GAAGN,UAAU,CAACM,GAAG,IAC7BJ,QAAQ,CAACK,MAAM,GAAGP,UAAU,CAACO,MAAM,EACrC;QACEf,WAAW,CAAC;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;MAC/B;IACJ;EACJ,CAAC,EAAE,CAACF,WAAW,EAAEG,SAAS,CAAC,CAAC;EAE5B,oBACIX,OAAA,CAACC,gBAAgB,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,QAAQ;MAAEK;IAAW,CAAE;IAAAP,QAAA,eACvDL,OAAA;MAAK0B,GAAG,EAAEf,SAAU;MAAAN,QAAA,EACfA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEpC,CAAC;AAACxB,GAAA,CA7BWF,iBAA2B;AAAA2B,EAAA,GAA3B3B,iBAA2B;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}