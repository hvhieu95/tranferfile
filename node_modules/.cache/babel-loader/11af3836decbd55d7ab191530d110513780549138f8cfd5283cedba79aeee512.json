{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\Generals\\\\DraggableItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { useDraggable } from \"../../contexts/DraggableContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DraggableItem = ({\n  type,\n  isSelected,\n  id,\n  style,\n  text\n}) => {\n  _s();\n  const {\n    updateItemText\n  } = useDraggable();\n  const textRef = useRef(null);\n  useEffect(() => {\n    if (isSelected && textRef.current) {\n      textRef.current.focus();\n    }\n  }, [isSelected]);\n  const handleTextBlur = e => {\n    updateItemText(id, e.currentTarget.textContent || \"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      e.target.blur();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...style,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `shape ${type}`,\n      style: {\n        border: isSelected ? \"1px dashed black\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: textRef,\n        contentEditable: isSelected,\n        onBlur: handleTextBlur,\n        onKeyDown: handleKeyDown,\n        style: {\n          outline: \"none\",\n          cursor: \"text\",\n          textAlign: 'center'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableItem, \"N/6v9ixJJv7DIWA+YFM4ZHlKgMk=\", false, function () {\n  return [useDraggable];\n});\n_c = DraggableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableItem\");","map":{"version":3,"names":["React","useRef","useEffect","useDraggable","jsxDEV","_jsxDEV","DraggableItem","type","isSelected","id","style","text","_s","updateItemText","textRef","current","focus","handleTextBlur","e","currentTarget","textContent","handleKeyDown","key","preventDefault","target","blur","display","alignItems","justifyContent","children","className","border","ref","contentEditable","onBlur","onKeyDown","outline","cursor","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/Generals/DraggableItem.tsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { ShapeType } from \"../../contexts/DraggableContext\";\r\nimport { useDraggable } from \"../../contexts/DraggableContext\";\r\n\r\ntype DraggableItemProps = {\r\n  type: ShapeType;\r\n  id: number;\r\n  isSelected: boolean;\r\n  style?: React.CSSProperties;\r\n  text: string;\r\n};\r\n\r\nexport const DraggableItem = ({ type, isSelected, id, style, text }: DraggableItemProps) => {\r\n  const { updateItemText } = useDraggable();\r\n  const textRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isSelected && textRef.current) {\r\n      textRef.current.focus();\r\n    }\r\n  }, [isSelected]);\r\n\r\n  const handleTextBlur = (e: React.FocusEvent<HTMLDivElement>) => {\r\n    updateItemText(id, e.currentTarget.textContent || \"\");\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      (e.target as HTMLElement).blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ ...style, display: 'flex', alignItems: 'center', justifyContent: 'center' }} >\r\n      <div className={`shape ${type}`} style={{ border: isSelected ? \"1px dashed black\" : \"none\" }}>\r\n        <div\r\n          ref={textRef}\r\n          contentEditable={isSelected}\r\n          onBlur={handleTextBlur}\r\n          onKeyDown={handleKeyDown}\r\n          style={{ outline: \"none\", cursor: \"text\", textAlign: 'center' }}\r\n        >\r\n          {text}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEhD,SAASC,YAAY,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/D,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAM;IAAEC;EAAe,CAAC,GAAGV,YAAY,CAAC,CAAC;EACzC,MAAMW,OAAO,GAAGb,MAAM,CAAiB,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,IAAIM,OAAO,CAACC,OAAO,EAAE;MACjCD,OAAO,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,MAAMS,cAAc,GAAIC,CAAmC,IAAK;IAC9DL,cAAc,CAACJ,EAAE,EAAES,CAAC,CAACC,aAAa,CAACC,WAAW,IAAI,EAAE,CAAC;EACvD,CAAC;EAED,MAAMC,aAAa,GAAIH,CAAsC,IAAK;IAChE,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBJ,CAAC,CAACK,cAAc,CAAC,CAAC;MACjBL,CAAC,CAACM,MAAM,CAAiBC,IAAI,CAAC,CAAC;IAClC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKK,KAAK,EAAE;MAAE,GAAGA,KAAK;MAAEgB,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,eACxFxB,OAAA;MAAKyB,SAAS,EAAG,SAAQvB,IAAK,EAAE;MAACG,KAAK,EAAE;QAAEqB,MAAM,EAAEvB,UAAU,GAAG,kBAAkB,GAAG;MAAO,CAAE;MAAAqB,QAAA,eAC3FxB,OAAA;QACE2B,GAAG,EAAElB,OAAQ;QACbmB,eAAe,EAAEzB,UAAW;QAC5B0B,MAAM,EAAEjB,cAAe;QACvBkB,SAAS,EAAEd,aAAc;QACzBX,KAAK,EAAE;UAAE0B,OAAO,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,EAE/DlB;MAAI;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CApCWN,aAAa;EAAA,QACGH,YAAY;AAAA;AAAAwC,EAAA,GAD5BrC,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}