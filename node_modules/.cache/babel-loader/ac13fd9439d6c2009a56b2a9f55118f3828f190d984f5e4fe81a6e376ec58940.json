{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\contexts\\\\DraggableContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultContextValue = {\n  canvasItems: [],\n  addItemToCanvas: () => {},\n  updateItemText: () => {},\n  positions: {},\n  handleStop: () => {},\n  undoCanvasAction: () => {},\n  updateUri: () => {},\n  uri: '',\n  clearUri: () => {}\n};\nexport const DraggableContext = /*#__PURE__*/createContext(defaultContextValue);\nexport const DraggableProvider = ({\n  children\n}) => {\n  _s();\n  const [uri, setUri] = useState('');\n  const [canvasItems, setCanvasItems] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [canvasHistory, setCanvasHistory] = useState([]);\n  const addItemToCanvas = (item, position) => {\n    const newItem = {\n      ...item,\n      position,\n      text: \"\"\n    };\n    setCanvasItems(prevItems => [...prevItems, newItem]);\n    setCanvasHistory(prevHistory => [...prevHistory, [...prevItems, newItem]]);\n  };\n  const updateItemText = (id, newText) => {\n    setCanvasItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            text: newText\n          };\n        }\n        return item;\n      });\n    });\n  };\n  const undoCanvasAction = () => {\n    if (canvasHistory.length > 0) {\n      setCanvasItems(canvasHistory[canvasHistory.length - 1]);\n      setCanvasHistory(canvasHistory.slice(0, -1));\n    }\n  };\n  const handleStop = (id, position) => {\n    setPositions(prevPositions => ({\n      ...prevPositions,\n      [id]: position\n    }));\n  };\n  const updateUri = path => {\n    setUri(path);\n  };\n  const clearUri = () => {\n    setUri('');\n  };\n  return /*#__PURE__*/_jsxDEV(DraggableContext.Provider, {\n    value: {\n      canvasItems,\n      addItemToCanvas,\n      updateItemText,\n      positions,\n      handleStop,\n      undoCanvasAction,\n      updateUri,\n      uri,\n      clearUri\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableProvider, \"v0wPeoN79c5Xy4VRMdUbpxigw9w=\");\n_c = DraggableProvider;\nexport const useDraggable = () => {\n  _s2();\n  return useContext(DraggableContext);\n};\n_s2(useDraggable, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DraggableProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","defaultContextValue","canvasItems","addItemToCanvas","updateItemText","positions","handleStop","undoCanvasAction","updateUri","uri","clearUri","DraggableContext","DraggableProvider","children","_s","setUri","setCanvasItems","setPositions","canvasHistory","setCanvasHistory","item","position","newItem","text","prevItems","prevHistory","id","newText","map","length","slice","prevPositions","path","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDraggable","_s2","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/contexts/DraggableContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nexport type ShapeType =\r\n  | \"circle\"\r\n  | \"rectangle\"\r\n  | \"vector\"\r\n  | \"triangle\"\r\n  | \"hexagon\"\r\n  | \"diamond\"\r\n  | \"parallelogram\";\r\n\r\ntype CanvasItem = {\r\n  type: ShapeType;\r\n  id: number;\r\n  position: { x: number; y: number };\r\n  isSelected: boolean;\r\n  text?: string;\r\n};\r\n\r\ntype DraggableContextType = {\r\n  canvasItems: CanvasItem[];\r\n  addItemToCanvas: (\r\n    item: { type: ShapeType; id: number; isSelected: boolean },\r\n    position: { x: number; y: number }\r\n  ) => void;\r\n  updateItemText: (id: number, newText: string) => void;\r\n  positions: { [key: string]: { x: number; y: number } };\r\n  handleStop: (id: string, position: { x: number; y: number }) => void;\r\n  undoCanvasAction: () => void;\r\n  updateUri: (path: string) => void;\r\n  uri: string;\r\n  clearUri: () => void;\r\n};\r\n\r\nconst defaultContextValue: DraggableContextType = {\r\n  canvasItems: [],\r\n  addItemToCanvas: () => { },\r\n  updateItemText: () => { },\r\n  positions: {},\r\n  handleStop: () => { },\r\n  undoCanvasAction: () => {},\r\n  updateUri: () =>{},\r\n  uri: '',\r\n  clearUri: () => {}\r\n};\r\n\r\nexport const DraggableContext =\r\n  createContext<DraggableContextType>(defaultContextValue);\r\n\r\ntype DraggableProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const DraggableProvider = ({ children }: DraggableProviderProps) => {\r\n  const [uri, setUri] = useState<string>('');\r\n  const [canvasItems, setCanvasItems] = useState<CanvasItem[]>([]);\r\n  const [positions, setPositions] = useState<{\r\n    [key: string]: { x: number; y: number };\r\n  }>({});\r\n  const [canvasHistory, setCanvasHistory] = useState<CanvasItem[][]>([]);\r\n  const addItemToCanvas = (\r\n    item: { type: ShapeType; id: number; isSelected: boolean },\r\n    position: { x: number; y: number }\r\n  ) => {\r\n    const newItem: CanvasItem = { ...item, position, text: \"\" };\r\n    setCanvasItems(prevItems => [...prevItems, newItem]);\r\n    setCanvasHistory(prevHistory => [...prevHistory, [...prevItems, newItem]]);\r\n  };\r\n  \r\n\r\n  const updateItemText = (id: number, newText: string) => {\r\n    setCanvasItems((prevItems) => {\r\n      return prevItems.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, text: newText };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  };\r\n\r\n  const undoCanvasAction = () => {\r\n    if (canvasHistory.length > 0) {\r\n      setCanvasItems(canvasHistory[canvasHistory.length - 1]);\r\n      setCanvasHistory(canvasHistory.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleStop = (id: string, position: { x: number; y: number }) => {\r\n    setPositions((prevPositions) => ({ ...prevPositions, [id]: position }));\r\n  };\r\n\r\n  \r\n  const updateUri = (path: string) =>{\r\n    setUri(path);\r\n  };\r\n\r\n  const clearUri = () => {\r\n    setUri('');\r\n  }\r\n\r\n  return (\r\n    <DraggableContext.Provider\r\n      value={{\r\n        canvasItems,\r\n        addItemToCanvas,\r\n        updateItemText,\r\n        positions,\r\n        handleStop,\r\n        undoCanvasAction,\r\n        updateUri,\r\n        uri,\r\n        clearUri\r\n      }}\r\n    >\r\n      {children}\r\n    </DraggableContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDraggable = () => {\r\n  return useContext(DraggableContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}