{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\Generals\\\\DraggableItem.tsx\";\nimport Draggable from 'react-draggable';\nimport { SHAPES } from '../../utils/shapesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DraggableItem = ({\n  type\n}) => {\n  const shapeStyle = SHAPES[type];\n  const className = \"mb-2 shape d-flex justify-content-center align-items-center\";\n  const styles = {\n    border: '1px solid black',\n    textAlign: 'center',\n    lineHeight: shapeStyle.height,\n    ...shapeStyle\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    onStop: e => {\n      if (e.clientY >= 0 && e.clientY <= 700) {\n        // Assuming canvas height is 700\n        handleDropOnCanvas(type);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      draggable: true,\n      onDragStart: e => {\n        e.dataTransfer.setData(\"itemType\", type);\n      },\n      className: className,\n      style: styles,\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = DraggableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableItem\");","map":{"version":3,"names":["Draggable","SHAPES","jsxDEV","_jsxDEV","DraggableItem","type","shapeStyle","className","styles","border","textAlign","lineHeight","height","onStop","e","clientY","handleDropOnCanvas","children","draggable","onDragStart","dataTransfer","setData","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/Generals/DraggableItem.tsx"],"sourcesContent":["\r\nimport Draggable from 'react-draggable';\r\nimport { SHAPES } from '../../utils/shapesData';\r\n\r\n\r\ntype DraggableItemType = {\r\n    type: 'rectangle' | 'circle' | 'vector'; \r\n};\r\n\r\nexport const DraggableItem = ({ type }: DraggableItemType) => {\r\n    const shapeStyle = SHAPES[type];\r\n    const className = \"mb-2 shape d-flex justify-content-center align-items-center\";\r\n    \r\n    const styles: React.CSSProperties = {\r\n        border: '1px solid black',\r\n        textAlign: 'center' as 'center',\r\n        lineHeight: shapeStyle.height,\r\n        ...shapeStyle\r\n    };\r\n    \r\n  \r\n    return (\r\n        <Draggable\r\n        onStop={(e) => {\r\n          if (e.clientY >= 0 && e.clientY <= 700) { // Assuming canvas height is 700\r\n            handleDropOnCanvas(type);\r\n          }\r\n        }}\r\n      >\r\n        <div\r\n          draggable\r\n          onDragStart={(e) => {\r\n            e.dataTransfer.setData(\"itemType\", type);\r\n          }}\r\n          className={className}\r\n          style={styles}\r\n        >\r\n          {type}\r\n        </div>\r\n      </Draggable>\r\n    );\r\n  };\r\n  "],"mappings":";AACA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,SAASC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhD,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAwB,CAAC,KAAK;EAC1D,MAAMC,UAAU,GAAGL,MAAM,CAACI,IAAI,CAAC;EAC/B,MAAME,SAAS,GAAG,6DAA6D;EAE/E,MAAMC,MAA2B,GAAG;IAChCC,MAAM,EAAE,iBAAiB;IACzBC,SAAS,EAAE,QAAoB;IAC/BC,UAAU,EAAEL,UAAU,CAACM,MAAM;IAC7B,GAAGN;EACP,CAAC;EAGD,oBACIH,OAAA,CAACH,SAAS;IACVa,MAAM,EAAGC,CAAC,IAAK;MACb,IAAIA,CAAC,CAACC,OAAO,IAAI,CAAC,IAAID,CAAC,CAACC,OAAO,IAAI,GAAG,EAAE;QAAE;QACxCC,kBAAkB,CAACX,IAAI,CAAC;MAC1B;IACF,CAAE;IAAAY,QAAA,eAEFd,OAAA;MACEe,SAAS;MACTC,WAAW,EAAGL,CAAC,IAAK;QAClBA,CAAC,CAACM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEhB,IAAI,CAAC;MAC1C,CAAE;MACFE,SAAS,EAAEA,SAAU;MACrBe,KAAK,EAAEd,MAAO;MAAAS,QAAA,EAEbZ;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACC,EAAA,GAhCSvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}