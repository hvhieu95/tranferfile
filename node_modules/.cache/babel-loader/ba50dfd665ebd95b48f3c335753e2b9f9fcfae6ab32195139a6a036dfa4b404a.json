{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\components\\\\Generals\\\\DraggableItem.tsx\";\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DraggableItem = ({\n  type,\n  onDragStart,\n  onDragEnd,\n  isDragging\n}) => {\n  const handleDragStart = e => {\n    e.dataTransfer.setData(\"type\", type);\n    if (onDragStart) onDragStart();\n  };\n  const handleDragEnd = (e, data) => {\n    // TODO: Add logic for isInsideCanvas if needed\n    // if (!isInsideCanvas(data)) {\n    //   // Logic to revert position\n    // }\n    if (onDragEnd) onDragEnd();\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    onStart: handleDragStart,\n    onStop: handleDragEnd,\n    position: isDragging ? {\n      x: 0,\n      y: 0\n    } : undefined,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = DraggableItem;\nvar _c;\n$RefreshReg$(_c, \"DraggableItem\");","map":{"version":3,"names":["React","Draggable","jsxDEV","_jsxDEV","DraggableItem","type","onDragStart","onDragEnd","isDragging","handleDragStart","e","dataTransfer","setData","handleDragEnd","data","onStart","onStop","position","x","y","undefined","children","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/components/Generals/DraggableItem.tsx"],"sourcesContent":["import React, { DragEvent } from 'react';\r\nimport Draggable, { DraggableEventHandler, DraggableData } from 'react-draggable';\r\nimport { ShapeType } from '../../contexts/DraggableContext';\r\n\r\ntype DraggableItemProps = {\r\n  type: ShapeType;\r\n  onDragStart?: () => void;\r\n  onDragEnd?: () => void;\r\n  isDragging?: boolean;\r\n};\r\n\r\nexport const DraggableItem = ({ type, onDragStart, onDragEnd, isDragging }: DraggableItemProps) => {\r\n  const handleDragStart: DraggableEventHandler = (e: DragEvent) => {\r\n    e.dataTransfer.setData(\"type\", type);\r\n    if (onDragStart) onDragStart();\r\n  };\r\n\r\n  const handleDragEnd: DraggableEventHandler = (e: DragEvent, data: DraggableData) => {\r\n    // TODO: Add logic for isInsideCanvas if needed\r\n    // if (!isInsideCanvas(data)) {\r\n    //   // Logic to revert position\r\n    // }\r\n    if (onDragEnd) onDragEnd();\r\n  };\r\n\r\n  return (\r\n    <Draggable \r\n      onStart={handleDragStart}\r\n      onStop={handleDragEnd}\r\n      position={isDragging ? { x: 0, y: 0 } : undefined}\r\n    >\r\n      <div style={{cursor: 'pointer'}}>\r\n        {type}\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,OAAOC,SAAS,MAAgD,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlF,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAA+B,CAAC,KAAK;EACjG,MAAMC,eAAsC,GAAIC,CAAY,IAAK;IAC/DA,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAAC;IACpC,IAAIC,WAAW,EAAEA,WAAW,CAAC,CAAC;EAChC,CAAC;EAED,MAAMO,aAAoC,GAAGA,CAACH,CAAY,EAAEI,IAAmB,KAAK;IAClF;IACA;IACA;IACA;IACA,IAAIP,SAAS,EAAEA,SAAS,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEJ,OAAA,CAACF,SAAS;IACRc,OAAO,EAAEN,eAAgB;IACzBO,MAAM,EAAEH,aAAc;IACtBI,QAAQ,EAAET,UAAU,GAAG;MAAEU,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,GAAGC,SAAU;IAAAC,QAAA,eAElDlB,OAAA;MAAKmB,KAAK,EAAE;QAACC,MAAM,EAAE;MAAS,CAAE;MAAAF,QAAA,EAC7BhB;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACC,EAAA,GAzBWxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}