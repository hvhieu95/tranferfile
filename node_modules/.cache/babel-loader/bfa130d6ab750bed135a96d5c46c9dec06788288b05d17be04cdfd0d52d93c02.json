{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\contexts\\\\DraggableContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(); // context cho tính năng kéo thả\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableContext = createContext(null);\n// custom hook để truy cập vào giá trị của Draggble context\nexport const useDraggble = () => {\n  _s();\n  return useContext(DraggableContext);\n};\n// component để chia sẻ logic và state liên quan tới kéo thả\n_s(useDraggble, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DraggableProvider = ({\n  children\n}) => {\n  _s2();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  // hàm xử lý khi việc kéo kết thúc\n  const handleStop = (e, data) => {\n    // lấy phần tử canvas từ DOM\n    const canvas = document.getElementById(\"canvas\");\n    // lấy thông tin vị trí và kích thước của canvas\n    // xác đinh xem hình đang đc kéo hay thả vào canvas hay không\n    const canvasRect = canvas.getBoundingClientRect();\n    //lấy thông tin về vị trí và kích thước hình đang được kéo\n    const itemRect = e.target.getBoundingClientRect();\n\n    // kiểm tra xem hình có nằm ngoài canvas không\n    if (itemRect.left < canvasRect.left || itemRect.right > canvasRect.right || itemRect.top < canvasRect.top || itemRect.bottom > canvasRect.bottom) {\n      setPosition({\n        x: 0,\n        y: 0\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DraggableContext.Provider, {\n    value: {\n      position,\n      handleStop\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s2(DraggableProvider, \"0qniUPJTLf8/oonUDLg0GM42ieg=\");\n_c = DraggableProvider;\nvar _c;\n$RefreshReg$(_c, \"DraggableProvider\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","DraggableContext","createContext","useDraggble","_s","useContext","DraggableProvider","children","_s2","position","setPosition","useState","x","y","handleStop","e","data","canvas","document","getElementById","canvasRect","getBoundingClientRect","itemRect","target","left","right","top","bottom","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/contexts/DraggableContext.tsx"],"sourcesContent":["// context cho tính năng kéo thả\r\ntype DraggableContextType={\r\n  position:{x:number,y:number}\r\n  handleStop:(e:any,data:any)=>void\r\n}\r\nconst DraggableContext = createContext<DraggableContextType | null>(null);\r\n// custom hook để truy cập vào giá trị của Draggble context\r\nexport const useDraggble = () => {\r\nreturn useContext(DraggableContext);\r\n};\r\n// component để chia sẻ logic và state liên quan tới kéo thả\r\nexport const DraggableProvider = ({ children }) => {\r\nconst [position, setPosition] = useState({ x: 0, y: 0 });\r\n// hàm xử lý khi việc kéo kết thúc\r\nconst handleStop = (e, data) => {\r\n  // lấy phần tử canvas từ DOM\r\n  const canvas = document.getElementById(\"canvas\");\r\n  // lấy thông tin vị trí và kích thước của canvas\r\n  // xác đinh xem hình đang đc kéo hay thả vào canvas hay không\r\n  const canvasRect = canvas.getBoundingClientRect();\r\n  //lấy thông tin về vị trí và kích thước hình đang được kéo\r\n  const itemRect = e.target.getBoundingClientRect();\r\n\r\n  // kiểm tra xem hình có nằm ngoài canvas không\r\n  if (\r\n    itemRect.left < canvasRect.left ||\r\n    itemRect.right > canvasRect.right ||\r\n    itemRect.top < canvasRect.top ||\r\n    itemRect.bottom > canvasRect.bottom\r\n  ) {\r\n    setPosition({ x: 0, y: 0 });\r\n  }\r\n};\r\nreturn (\r\n  <DraggableContext.Provider value={{ position, handleStop }}>\r\n    {children}\r\n  </DraggableContext.Provider>\r\n);\r\n};"],"mappings":";;wBAAA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAKA,MAAMC,gBAAgB,GAAGC,aAAa,CAA8B,IAAI,CAAC;AACzE;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOC,UAAU,CAACJ,gBAAgB,CAAC;AACnC,CAAC;AACD;AAAAG,EAAA,CAHaD,WAAW;AAIxB,OAAO,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD;EACA,MAAMC,UAAU,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IAC9B;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChD;IACA;IACA,MAAMC,UAAU,GAAGH,MAAM,CAACI,qBAAqB,CAAC,CAAC;IACjD;IACA,MAAMC,QAAQ,GAAGP,CAAC,CAACQ,MAAM,CAACF,qBAAqB,CAAC,CAAC;;IAEjD;IACA,IACEC,QAAQ,CAACE,IAAI,GAAGJ,UAAU,CAACI,IAAI,IAC/BF,QAAQ,CAACG,KAAK,GAAGL,UAAU,CAACK,KAAK,IACjCH,QAAQ,CAACI,GAAG,GAAGN,UAAU,CAACM,GAAG,IAC7BJ,QAAQ,CAACK,MAAM,GAAGP,UAAU,CAACO,MAAM,EACnC;MACAjB,WAAW,CAAC;QAAEE,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAC;IAC7B;EACF,CAAC;EACD,oBACEb,OAAA,CAACC,gBAAgB,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEpB,QAAQ;MAAEK;IAAW,CAAE;IAAAP,QAAA,EACxDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE9B,CAAC;AAACzB,GAAA,CA3BWF,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}