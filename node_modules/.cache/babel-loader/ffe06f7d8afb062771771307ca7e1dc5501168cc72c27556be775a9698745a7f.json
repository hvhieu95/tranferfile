{"ast":null,"code":"var _jsxFileName = \"D:\\\\rikkei\\\\bearcle\\\\React Typescript\\\\react-ts-file\\\\src\\\\texteditor.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextEditor = ({\n  text,\n  onTextChange,\n  onFontChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => onTextChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => onFontChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Arial\",\n        children: \"Arial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Verdana\",\n        children: \"Verdana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Times New Roman\",\n        children: \"Times New Roman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["TextEditor","text","onTextChange","onFontChange","_jsxDEV","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/rikkei/bearcle/React Typescript/react-ts-file/src/texteditor.tsx"],"sourcesContent":["\r\ntype TextEditorProps = {\r\n  text: string;\r\n  onTextChange: (newText: string) => void;\r\n  onFontChange: (font: string) => void;\r\n};\r\n\r\nexport const TextEditor = ({ text, onTextChange, onFontChange }:TextEditorProps ) => {\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <textarea value={text} onChange={(e) => onTextChange(e.target.value)} />\r\n      <select onChange={(e) => onFontChange(e.target.value)}>\r\n        <option value=\"Arial\">Arial</option>\r\n        <option value=\"Verdana\">Verdana</option>\r\n        <option value=\"Times New Roman\">Times New Roman</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAOA,OAAO,MAAMA,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC;AAA6B,CAAC,KAAM;EACnF,oBACEC,OAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BF,OAAA;MAAUG,KAAK,EAAEN,IAAK;MAACO,QAAQ,EAAGC,CAAC,IAAKP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEV,OAAA;MAAQI,QAAQ,EAAGC,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAD,QAAA,gBACpDF,OAAA;QAAQG,KAAK,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCV,OAAA;QAAQG,KAAK,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCV,OAAA;QAAQG,KAAK,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAXWf,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}